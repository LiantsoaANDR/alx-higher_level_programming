===========================================================
Test for task 1, matrix_divided
===========================================================

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

>>> matrix = [[1, 2, 3], [4, 5, 6]]

>>> print(matrix_divided(matrix, 3))
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

>>> matrix = [[2, 4, 6], [-6, -4, -2]]

>>> print(matrix_divided(matrix, 2))
[[1.0, 2.0, 3.0], [-3.0, -2.0, -1.0]]

>>> matrix_divided()
Traceback (most recent call last):
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

>>> matrix_divided(matrix, 1, 2)
Traceback (most recent call last):
TypeError: matrix_divided() takes 2 positional arguments but 3 were given

>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
ZeroDivisionError: division by zero

>>> matrix = []

>>> matrix_divided(matrix, 3)
[]

>>> matrix = [[], [], [] ,[]]

>>> matrix_divided(matrix, 3)
[[], [], [], []]

>>> matrix = [[3, 5, 6], [1], [1, 2]]

>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size

>>> matrix = [[0, 0, 0], ['a', 100, 'b'], ['c', 221, 'd']]

>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats
